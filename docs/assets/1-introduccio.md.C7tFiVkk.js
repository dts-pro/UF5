import{_ as e,c as r,o as t,a4 as o}from"./chunks/framework.BFd9234H.js";const p=JSON.parse('{"title":"1. Introducció","description":"","frontmatter":{},"headers":[],"relativePath":"1-introduccio.md","filePath":"1-introduccio.md"}'),n={name:"1-introduccio.md"};function i(s,a,c,l,d,m){return t(),r("div",null,a[0]||(a[0]=[o('<h1 id="_1-introduccio" tabindex="-1">1. Introducció <a class="header-anchor" href="#_1-introduccio" aria-label="Permalink to &quot;1. Introducció&quot;">​</a></h1><p>Un <strong>vector</strong> o <strong>array</strong> és una col·lecció de <strong>valors d&#39;un mateix tipus</strong> dins d&#39;una mateixa variable, de manera que es pot accedir a cada valor independentment.</p><p>Els vectors solucionen problemes relacionats amb la gestió de moltes variables que fan referència a dades semblants. Per exemple, si necessitàrem emmagatzemar les notes d’una classe amb 18 alumnes, caldria declarar 18 variables, amb la gran dificultat de gestió que això comporta.</p><p>Només calcular la nota mitjana exigiria una línia de codi molt extensa. Emmagatzemar les notes suposaria almenys 18 línies de codi.</p><p>En lloc de crear 18 variables, seria molt millor declarar un vector de tamany 18 (és com si tinguérem una sola variable capaç d’emmagatzemar diversos valors).</p><p>Gràcies als vectors es pot crear un conjunt de variables amb el mateix nom. La diferència és que un número (l’índex del vector) permet distingir cada valor.</p>',6)]))}const _=e(n,[["render",i]]);export{p as __pageData,_ as default};
